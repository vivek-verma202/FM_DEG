gc()
sizeFactors(dds)
plotDispEsts(dds)
results(dds) %>% data.frame() %>% View()
resultsNames(dds)
results(dds, name="FM_Case_vs_Control") %>% data.frame() %>% View()
results(dds, name="sex_Male_vs_Female") %>% data.frame() %>% View()
results(dds, name="age") %>% data.frame() %>% View()
results(dds, name="batch_B_vs_A") %>% data.frame() %>% View()
results(dds, name="Intercept") %>% data.frame() %>% View()
gc()
plotMA(results(dds, name="FM_Case_vs_Control"))
resLFC <- lfcShrink(dds, coef="FM_Case_vs_Control", type="apeglm")
BiocManager::install("apeglm")
resLFC <- lfcShrink(dds, coef="FM_Case_vs_Control", type="apeglm")
plotMA(resLFC)
?results
results(dds, name="FM_Case_vs_Control") %>% data.frame() %>% View()
resLFC %>% data.frame() %>% View()
results(dds, name="FM_Case_vs_Control") %>% data.frame() %>% View()
resLFC %>% data.frame() %>% View()
gc()
plotMA(results(dds, name="FM_Case_vs_Control"), ylim=c(-1,1))
plotMA(resLFC, ylim=c(-1,1))
plotMA(resLFC, ylim=c(-0.5,0.5))
plotMA(resLFC, ylim=c(-0.1,0.1))
plotMA(resLFC, ylim=c(-0.01,0.01))
resLFC <- resLFC %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
View(resLFC)
colData(dds)[1:3,1:3]
dds[1:3,1:3]
colData(dds)
table(colData(dds)$sex)
table(colData(dds)$sex,colData(dds)$FM)
write.table(resLFC,
file="./deseq_res_all_shrunken_LFC.txt",
sep="\t", quote=F, col.names=NA)
saveRDS(dds,"dds_all.RDS")
View(dds)
dds@colData@listData[["sex"]]
dds1 <- dds[dds@colData@listData[["sex"]] == "Female"]
plotDispEsts(dds)
plotDispEsts(dds1)
?DESeq
dds1 <- DESeq(dds1, parallel = T)
?results
resultsNames(dds1)
results(dds1, name="sex_Male_vs_Female") %>% data.frame() %>% View()
View(dds1)
dds1
dds
results(dds1, name="sex_Male_vs_Female") %>% data.frame() %>% View()
results(dds1)
results(dds)
summary(results(dds))
summary(results(dds1))
dds
dds1
rm(list = ls()); gc()
tx2gene <- read.delim("./tx2gene_grch38_ens100.txt")
samples <- list.files(path = "./salmon_output/",
full.names = T, pattern="salmon$")
files <- file.path(samples, "quant.sf")
names(files) <- str_replace(samples, "./salmon_output/", "") %>%
str_replace(".Fastq.gz.salmon", "")
all(file.exists(files))
meta <- readRDS("C:/Users/Vivek/Desktop/FM_DEG/FM_metadata.RDS")
glimpse(meta)
meta <- filter(meta, sex == "Female")
meta <- readRDS("./FM_metadata.RDS")
meta <- meta %>% filter(sex == "Female") %>%
select(-sex) %>% filter(ID != "F62")
View(meta)
sapply(meta, function(x) sum(is.na(x)))
files
names(files)
names(files) %in% meta$ID
sum(names(files) %in% meta$ID)
f1 <- files[names(files) %in% meta$ID]
files <- files[names(files) %in% meta$ID]
txi <- tximport(files, type="salmon", tx2gene=tx2gene[,c("tx_id", "symbol")], countsFromAbundance="lengthScaledTPM",
ignoreTxVersion = T)
saveRDS(txi,"txi_F_only.RDS")
dds <- DESeq2::DESeqDataSetFromTximport(txi, colData = meta,
design = ~ age + batch + FM)
dds
write.table(counts(dds, normalized=TRUE),
file="./normalized_counts_F_only.txt",
sep="\t", quote=F, col.names=NA)
dds <- estimateSizeFactors(dds)
write.table(counts(dds, normalized=TRUE),
file="./normalized_counts_F_only.txt",
sep="\t", quote=F, col.names=NA)
sum(rowSums(counts(dds)) >= 1)
keep <- sum(rowSums(counts(dds)) >= 1)
dds <- dds[keep,]
rm(list = setdiff(ls(),c("dds","meta"))); gc()
dds
txi <- readRDS("C:/Users/Vivek/Desktop/FM_DEG/txi_F_only.RDS")
dds <- DESeq2::DESeqDataSetFromTximport(txi, colData = meta,
design = ~ age + batch + FM)
dds <- estimateSizeFactors(dds)
keep <- rowSums(counts(dds)) >= 1
table(keep)
dds <- dds[keep,] # 12517 out of 35972
rm(list = setdiff(ls(),c("dds","meta"))); gc()
dds <- DESeq(dds, parallel = T)
dds <- DESeq(dds)
resultsNames(dds)
plotDispEsts(dds)
results(dds, name="FM_Case_vs_Control") %>% data.frame() %>% View()
plotMA(results(dds, name="FM_Case_vs_Control"), ylim=c(-1,1))
resLFC <- lfcShrink(dds, coef="FM_Case_vs_Control", type="apeglm")
plotMA(resLFC, ylim=c(-0.01,0.01))
plotMA(resLFC, ylim=c(-0.001,0.001))
plotMA(resLFC, ylim=c(-0.0001,0.0001))
?plotMA
plotMA(resLFC, ylim=c(-0.00001,0.00001))
plotMA(resLFC, ylim=c(-0.00001,0.00001),alpha = 0.1)
plotMA(resLFC, ylim=c(-0.00001,0.00001),alpha = 0.5)
resLFC <- resLFC %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
View(resLFC)
write.table(resLFC,
file="./deseq_res_F_only_shrunken_LFC.txt",
sep="\t", quote=F, col.names=T,row.names = F)
saveRDS(dds,"dds_F_only.RDS")
gc()
dds <- readRDS("C:/Users/Vivek/Desktop/FM_DEG/dds_F_only.RDS")
plotCounts(dds, gene="CABIN1", intgroup="sampletype")
plotCounts(dds, gene="CABIN1", intgroup="FM")
plotCounts(dds, gene="TMEM8B", intgroup="FM")
?results
plotCounts(dds, gene="JCHAIN", intgroup="FM")
results(dds,cooksCutoff = 0.9) %>% data.frame() %>% View()
norm_count <- read.delim("C:/Users/Vivek/Desktop/FM_DEG/normalized_counts_F_only.txt")
View(norm_count)
?brewer.pal.info
display.brewer.all()
pheatmap(norm_count,
color = c("grey40","white","orange"),
cluster_rows = T,
show_rownames = F,
annotation = meta,
border_color = NA,
fontsize = 10,
scale = "row",
fontsize_row = 10,
height = 20)
meta <- readRDS("C:/Users/Vivek/Desktop/FM_DEG/FM_metadata.RDS")
meta <- meta %>% filter(sex == "Female") %>%
select(-sex) %>% filter(ID != "F62")
View(norm_count)
View(dds)
dds@colData@listData[["sizeFactor"]]
hist(dds@colData@listData[["sizeFactor"]])
colData(dds) %>% View()
colData(dds) %>% as.data.frame() %>% View()
rowData(dds) %>% as.data.frame() %>% View()
names(rowData(dds))
row.names(rowData(dds))
norm_count1 <- norm_count %>% filter(x %in% row.names(rowData(dds)))
View(norm_count)
norm_count1 <- norm_count %>% filter(X %in% row.names(rowData(dds)))
?column_to_rownames
norm_count <- norm_count %>%
filter(X %in% row.names(rowData(dds))) %>%
column_to_rownames(var="X") %>% as.matrix()
gc()
pheatmap(norm_count,
color = c("grey40","white","orange"),
cluster_rows = T,
show_rownames = F,
annotation = meta,
border_color = NA,
fontsize = 10,
scale = "row",
fontsize_row = 10,
height = 20)
lib.path()
libPaths()
.libPaths()
BiocManager::install("clusterProfiler")
remove.packages("bit", lib="~/R/win-library/4.0")
remove.packages("bit64", lib="~/R/win-library/4.0")
remove.packages("fs", lib="~/R/win-library/4.0")
BiocManager::install("bit")
BiocManager::install("survival")
.libPaths()
BiocManager::install("survival")
BiocManager::install("clusterProfiler")
BiocManager::install("bit")
BiocManager::install("bit64")
BiocManager::install("fs")
remove.packages("bit", lib="~/R/win-library/4.0")
remove.packages("bit64", lib="~/R/win-library/4.0")
remove.packages("fs", lib="~/R/win-library/4.0")
BiocManager::install("bit64")
?BiocManager::install
library(bit)
library(bit64)
detach("package:bit", unload = TRUE)
detach("package:bit64", unload = TRUE)
remove.packages("bit", lib="~/R/win-library/4.0")
remove.packages("bit64", lib="~/R/win-library/4.0")
install.packages("bit64")
install.packages("fs")
BiocManager::install(c("DOSE","pathview"))
library(DOSE)
library(pathview)
library(clusterProfiler)
deseq_res_F_only_shrunken_LFC <- read.delim("C:/Users/Vivek/Desktop/FM_DEG/deseq_res_F_only_shrunken_LFC.txt")
View(deseq_res_F_only_shrunken_LFC)
gc()
res <- read.delim("./deseq_res_F_only_shrunken_LFC.txt")
head(geneList)
data(geneList, package="DOSE")
head(geneList)
str(geneList)
gc()
View(res)
plot(res$pvalue,res$log2FoldChange)
plot(res$pvalue,res$log2FoldChange, ylim = c(-0.1,0.1))
plot(-log(res$pvalue),res$log2FoldChange, ylim = c(-0.1,0.1))
plot(-log(res$pvalue),res$log2FoldChange,
xlim = c(0,5),ylim = c(-0.1,0.1))
plot(-log(res$pvalue),res$log2FoldChange,
xlim = c(0,5),ylim = c(-0.01,0.01))
plot(-log(res$pvalue),res$log2FoldChange,
xlim = c(0,5),ylim = c(-0.001,0.001))
plot(-log(res$pvalue),res$log2FoldChange,
xlim = c(0,5),ylim = c(-0.0001,0.0001))
plot(-log(res$pvalue),res$log2FoldChange,
xlim = c(0,5),ylim = c(-0.00001,0.00001))
data(geneList, package="DOSE")
?geneList
names(geneList)
?bitr
annotations_ahb <- read.csv("C:/Users/Vivek/Desktop/FM_DEG/annotations_ahb.csv")
View(annotations_ahb)
res_ids <- inner_join(res, annotations_ahb, by=c("gene"="gene_name"))
library(tidyverse)
res_ids <- inner_join(res, annotations_ahb, by=c("gene"="gene_name"))
View(res_ids)
sum(is.na(res_ids$entrezid))
dotchart(res_ids$padj)
dotplot(res_ids$padj)
hist(res_ids$padj)
hist(res_ids$padj,breaks = 1000)
hist(res_ids$padj,breaks = 1000, ylim = 10)
hist(res_ids$padj,breaks = 1000, ylim = c(0,10))
hist(res_ids$padj,breaks = 10000, ylim = c(0,4))
hist(res_ids$pvalue,breaks = 10000, ylim = c(0,4))
hist(res_ids$pvalue,breaks = 10000, ylim = c(0,10))
hist(res_ids$pvalue,breaks = 10000)
hist(res_ids$pvalue,breaks = 10000, ylim = c(0,100))
allOE_genes <- as.character(res_ids$gene)
sigOE <- dplyr::filter(res_ids, pvalue < 0.05)
sigOE_genes <- as.character(sigOE$gene)
View(sigOE)
sigup <- dplyr::filter(sigOE, log2FoldChange > 0)
View(sigup)
sigdn <- dplyr::filter(sigOE, log2FoldChange < 0)
gc()
sigup_genes <- as.character(sigup$gene)
sigdn_genes <- as.character(sigdn$gene)
egoup <- enrichGO(gene = sigup_genes,
universe = allOE_genes,
keyType = "ENSEMBL",
OrgDb = org.Hs.eg.db,
ont = "BP",
pAdjustMethod = "BH",
qvalueCutoff = 0.05,
readable = TRUE)
gc()
library(DOSE)
library(pathview)
library(clusterProfiler)
library(tidyverse)
res <- read.delim("./deseq_res_F_only_shrunken_LFC.txt")
annotations_ahb <- read.csv("./annotations_ahb.csv")
res <- inner_join(res, annotations_ahb, by=c("gene"="gene_name"))
sum(is.na(res_ids$entrezid))
sum(is.na(res$entrezid))
res <- read.delim("./deseq_res_F_only_shrunken_LFC.txt")
library(org.Hs.eg.db)
columns(org.Hs.eg.db)
View(res)
?mapIds
eid <- mapIds(org.Hs.eg.db, res$gene, 'ENTREZID', 'SYMBOL')
eid
sum(is.na(eid))
res$entrezid <- mapIds(org.Hs.eg.db, res$gene, 'ENTREZID', 'SYMBOL')
sum(is.na(res$entrezid)) #973
geneList <- res[,3]
names(geneList) <- as.character(res[,7])
geneList[1:10]
geneList <- sort(abs(geneList), decreasing = TRUE)
geneList[1:10]
sum(is.na(res$entrezid)) #466
sapply(res, function(x) sum(is.na(x)))
table(is.na(res$pvalue),is.na(res$entrezid))
res[is.na(res$entrezid),]
res[is.na(res$pvalue),]
res1 <- complete.cases(res)
res1 <- res[complete.cases(res),]
table(is.na(res$pvalue),is.na(res$entrezid))
table(is.na(res1$pvalue),is.na(res1$entrezid))
res <- res[complete.cases(res),]
table(is.na(res$pvalue),is.na(res$entrezid))
gc()
res1 <- res[order(abs(res$log2FoldChange)),]
View(res1)
res1 <- res[order(abs(res$log2FoldChange), decreasing = T),]
res <- res[order(abs(res$log2FoldChange), decreasing = T),]
View(res)
summary(res$baseMean[1:100])
res1 <- res[order(res$pvalue),]
View(res1)
summary(res1$baseMean[1:100])
hist(res$baseMean)
hist(res$baseMean, breaks = 1000, xlim = 100)
hist(res$baseMean, breaks = 1000, xlim = c(0,100))
hist(res$baseMean[1:100], xlim = c(0,100))
hist(res$baseMean[1:100], breaks = 10, xlim = c(0,100))
hist(res$baseMean[1:100], breaks = 10, xlim = c(0,1000))
hist(res$baseMean[1:100],  xlim = c(0,1000))
hist(res1$baseMean[1:100],  xlim = c(0,1000))
row.names(res) <- as.character(res[,7])
geneList <- res[,3]
geneList
names(geneList) <- as.character(res[,7])
geneList
hist(geneList)
hist(geneList,breaks = 100, xlim = c(-1,1),ylim = c(0,1000))
BiocManager::install("rWikiPathways")
rWikiPathways::listOrganisms()
wpgmtfile <- rWikiPathways::downloadPathwayArchive(
organism="Homo sapiens”, format="gmt")
library(rWikiPathways)
# Wiki Pathways:
downloadPathwayArchive(organism = "Homo sapiens", format = "gmt")
wpgmtfile <- system.file("./wikipathways-20200710-gmt-Homo_sapiens.gmt", package="clusterProfiler")
wp2gene <- read.gmt(wpgmtfile)
wp2gene <- read.gmt("./wikipathways-20200710-gmt-Homo_sapiens.gmt")
View(wp2gene)
wp2gene <- wp2gene %>% tidyr::separate(ont, c("name","version","wpid","org"), "%")
wpgmtfile <- system.file("./wikipathways-20200710-gmt-Homo_sapiens.gmt", package="clusterProfiler")
wp2gene <- read.gmt(wpgmtfile)
library(msigdbr)
BiocManager::install("msigdbr")
m_df <- msigdbr(species = "Homo sapiens")
# msigdb
library(msigdbr)
m_df <- msigdbr(species = "Homo sapiens")
head(m_df, 2) %>% as.data.frame
em <- GSEA(geneList, TERM2GENE = m_df)
res <- res[order(res$log2FoldChange, decreasing = T),]
geneList <- res[,3]
names(geneList) <- as.character(res[,7])
em <- GSEA(geneList, TERM2GENE = m_df)
de <- names(geneList)[abs(geneList) > 1]
de <- names(geneList)[abs(geneList) > 0.1]
de <- names(geneList)[abs(geneList) > 0.01]
de <- names(geneList)[abs(geneList) > 0.001]
de <- names(geneList)[abs(geneList) > 0.0001]
de <- names(geneList)[abs(geneList) > 0.00001]
edo <- enrichDGN(de)
library(enrichplot)
barplot(edo, showCategory=20)
edo
?enrichGO
edo <- enrichGO(de, )
edo <- enrichGO(de,'org.Hs.eg.db')
barplot(edo, showCategory=20)
head(edo)
edo <- enrichGO(de,'org.Hs.eg.db',pvalueCutoff = 0.05)
head(edo)
edo <- enrichGO(de,'org.Hs.eg.db',pvalueCutoff = 0.9)
head(edo)
View(res)
gc()
res <- read.delim("./deseq_res_F_only_shrunken_LFC.txt")
sapply(res, function(x) sum(is.na(x)))
res <- res[complete.cases(res),]
sapply(res, function(x) sum(is.na(x)))
res <- res[order(res$log2FoldChange, decreasing = T),]
View(res)
tail(res)
res1 <- res[,c(1,3)]
View(res1)
names(res1) <- c("GeneName","rank")
write.table(res1,
file="./deseq_res_F_only_shrunken_LFC.rnk",
sep="\t", quote=F, col.names=T,row.names = F)
normalized_counts_F_only <- read.delim("C:/Users/Vivek/Desktop/FM_DEG/normalized_counts_F_only.txt")
View(normalized_counts_F_only)
df <- normalized_counts_F_only[rowSums(normalized_counts_F_only) > 5,]
rowSums(normalized_counts_F_only)
df <- normalized_counts_F_only[complete.cases(normalized_counts_F_only),]
df <- normalized_counts_F_only[colSums(normalized_counts_F_only) > 5,]
df <- normalized_counts_F_only[colSums(normalized_counts_F_only[,-1]) > 5,]
df <- normalized_counts_F_only[colSums(normalized_counts_F_only[,-1]) > 50,]
df <- normalized_counts_F_only[colSums(normalized_counts_F_only[-1,]) > 5,]
df <- normalized_counts_F_only[colSums(normalized_counts_F_only[,-1]) > 5,]
gc()
res <- read.delim("C:/Users/Vivek/Desktop/FM_DEG/deseq_res_F_only_shrunken_LFC.txt")
View(res)
hist(res$baseMean)
hist(res$log2FoldChange)
plot(res$log2FoldChange,res$baseMean)
plot(res$log2FoldChange,res$baseMean, ylim=c(0,1000))
plot(res$log2FoldChange,res$lfcSE, ylim=c(0,1000))
plot(res$log2FoldChange,res$lfcSE, ylim=c(0,1))
plot(res$log2FoldChange,res$lfcSE, ylim=c(0,10))
hist(res$lfcSE)
hist(res$lfcSE, xlim=c(0,0.1))
hist(res$lfcSE, xlim=c(0,1))
hist(res$lfcSE, xlim=c(0,1), breaks = 1000)
View(res)
res <- res[complete.cases(res),]
hist(res$lfcSE, xlim=c(0,0.1), breaks = 1000)
hist(res$lfcSE, xlim=c(0,0.02), breaks = 1000)
hist(res$lfcSE, xlim=c(0,0.01), breaks = 1000)
dotchart(res$lfcSE)
?dotchart
norm_count <- read.delim("./normalized_counts_F_only.txt")
norm_count <- norm_count %>%
filter(X %in% row.names(rowData(dds))) %>%
column_to_rownames(var="X") %>% as.matrix()
gc()
library(tidyverse)
norm_count <- read.delim("./normalized_counts_F_only.txt")
norm_count <- norm_count %>%
column_to_rownames(var="X") %>% as.matrix()
View(norm_count)
dim(norm_count)
length(is.na(norm_count))
sum(is.na(norm_count))
dotchart(rowSums(norm_count))
hist(rowSums(norm_count))
hist(rowSums(norm_count), breaks = 1000, xlim = c(0,10000))
hist(rowSums(norm_count), breaks = 1000, xlim = c(0,1000))
hist(log(rowSums(norm_count)), breaks = 1000,)
hist(log(rowSums(norm_count)), breaks = 10000,)
hist(log(rowSums(norm_count)), breaks = 1000,)
hist(ln(rowSums(norm_count)), breaks = 1000,)
hist(log2(rowSums(norm_count)), breaks = 1000,)
hist(log(rowSums(norm_count)), breaks = 1000,)
hist(log(rowSums(norm_count)), breaks = 100,)
rsum <- rowSums(norm_count)
names(rsum) <- names(norm_count)
rsum <- sort(rsum, decreasing = T)
rsum[1:100]
norm_count$rsum <- rowSums(norm_count)
sum <- as.data.frame(rowSums(norm_count))
hist(colSums(norm_count))
?rowSums
hist(colSums(norm_count))
colSums(norm_count)
colsum(norm_count[,1])
colSums(norm_count[,1])
colSums(norm_count)
colSums(as.data.frame(norm_count))
gc()
?apply(array, margin, ...)
solsum <- apply(norm_count, 2, FUN = sum, na.rm = TRUE)
dim(norm_count)
gc()
norm_count <- read.delim("./normalized_counts_F_only.txt")
norm_count <- norm_count %>%
column_to_rownames(var="X") %>% as.matrix()
colsum <- apply(norm_count, 2, FUN = sum, na.rm = TRUE)
hist(colsum)
hist(colsum, breaks = 40)
name <- names(norm_count)
colnames(norm_count)
name <- colnames(norm_count)
df <- data.frame(cbind(names,colsum))
View(df)
df <- data.frame(cbind(name,colsum))
gc()
meta <- readRDS("C:/Users/Vivek/Desktop/FM_DEG/FM_metadata.RDS")
View(meta)
nc <- read.delim("./normalized_counts_F_only.txt")
colnames(nc)
colnames(nc)[-1]
df <- data.frame()
df$ID <- colnames(nc)[-1]
df <- data.frame(87,2)
df$ID <- colnames(nc)[-1]
df <- as.data.frame()
ID <- as.data.frame(colnames(nc)[-1])
View(ID)
names(ID$`colnames(nc)[-1]`) <- ID
m <- meta[,c(1,2)]
df <- inner_join(ID,m,by = "ID")
names(ID$`colnames(nc)[-1]`) <- "ID"
names(ID) <- "ID"
df <- inner_join(ID,m,by = "ID")
View(df)
df <- t(as.matrix(df))
View(df)
write.table(df[2,], "pheno.txt",sep = "\t", row.names = F, col.names = F)
table(meta$FM)
table(df)
table(df[2,])
